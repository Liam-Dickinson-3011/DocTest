### YamlMime:ManagedReference
items:
- uid: Lucid.Animation.LATransformCollection
  commentId: T:Lucid.Animation.LATransformCollection
  id: LATransformCollection
  parent: Lucid.Animation
  children:
  - Lucid.Animation.LATransformCollection.#ctor
  - Lucid.Animation.LATransformCollection.#ctor(Lucid.Animation.LATransformCollection)
  - Lucid.Animation.LATransformCollection.AddToSequence(Sequence,System.Boolean)
  - Lucid.Animation.LATransformCollection.doPos
  - Lucid.Animation.LATransformCollection.doRot
  - Lucid.Animation.LATransformCollection.doScale
  - Lucid.Animation.LATransformCollection.GetSequenceDuration
  - Lucid.Animation.LATransformCollection.target
  - Lucid.Animation.LATransformCollection.targetEulerRots
  - Lucid.Animation.LATransformCollection.targetPositions
  - Lucid.Animation.LATransformCollection.targetScales
  langs:
  - csharp
  - vb
  name: LATransformCollection
  nameWithType: LATransformCollection
  fullName: Lucid.Animation.LATransformCollection
  type: Class
  source:
    id: LATransformCollection
    path: ''
    startLine: 23157
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: >-
      [Serializable]

      public class LATransformCollection : LAComponentCollection
    content.vb: >-
      <Serializable>

      Public Class LATransformCollection
          Inherits LAComponentCollection
  inheritance:
  - System.Object
  - Lucid.Animation.LAComponentCollection
  inheritedMembers:
  - Lucid.Animation.LAComponentCollection.onSequenceComplete
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Lucid.Animation.LATransformCollection.doPos
  commentId: F:Lucid.Animation.LATransformCollection.doPos
  id: doPos
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: doPos
  nameWithType: LATransformCollection.doPos
  fullName: Lucid.Animation.LATransformCollection.doPos
  type: Field
  source:
    id: doPos
    path: ''
    startLine: 23164
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public bool doPos
    return:
      type: System.Boolean
    content.vb: Public doPos As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.doRot
  commentId: F:Lucid.Animation.LATransformCollection.doRot
  id: doRot
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: doRot
  nameWithType: LATransformCollection.doRot
  fullName: Lucid.Animation.LATransformCollection.doRot
  type: Field
  source:
    id: doRot
    path: ''
    startLine: 23168
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public bool doRot
    return:
      type: System.Boolean
    content.vb: Public doRot As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.doScale
  commentId: F:Lucid.Animation.LATransformCollection.doScale
  id: doScale
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: doScale
  nameWithType: LATransformCollection.doScale
  fullName: Lucid.Animation.LATransformCollection.doScale
  type: Field
  source:
    id: doScale
    path: ''
    startLine: 23172
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public bool doScale
    return:
      type: System.Boolean
    content.vb: Public doScale As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.target
  commentId: F:Lucid.Animation.LATransformCollection.target
  id: target
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: target
  nameWithType: LATransformCollection.target
  fullName: Lucid.Animation.LATransformCollection.target
  type: Field
  source:
    id: target
    path: ''
    startLine: 23177
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public Transform target
    return:
      type: Global.Transform
    content.vb: Public target As Transform
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.targetPositions
  commentId: F:Lucid.Animation.LATransformCollection.targetPositions
  id: targetPositions
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: targetPositions
  nameWithType: LATransformCollection.targetPositions
  fullName: Lucid.Animation.LATransformCollection.targetPositions
  type: Field
  source:
    id: targetPositions
    path: ''
    startLine: 23185
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public List<LAVector3> targetPositions
    return:
      type: Global.List{Lucid.Animation.LAVector3}
    content.vb: Public targetPositions As List(Of LAVector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.targetEulerRots
  commentId: F:Lucid.Animation.LATransformCollection.targetEulerRots
  id: targetEulerRots
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: targetEulerRots
  nameWithType: LATransformCollection.targetEulerRots
  fullName: Lucid.Animation.LATransformCollection.targetEulerRots
  type: Field
  source:
    id: targetEulerRots
    path: ''
    startLine: 23193
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public List<LAEulerAngles> targetEulerRots
    return:
      type: Global.List{Lucid.Animation.LAEulerAngles}
    content.vb: Public targetEulerRots As List(Of LAEulerAngles)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.targetScales
  commentId: F:Lucid.Animation.LATransformCollection.targetScales
  id: targetScales
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: targetScales
  nameWithType: LATransformCollection.targetScales
  fullName: Lucid.Animation.LATransformCollection.targetScales
  type: Field
  source:
    id: targetScales
    path: ''
    startLine: 23201
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public List<LAVector3> targetScales
    return:
      type: Global.List{Lucid.Animation.LAVector3}
    content.vb: Public targetScales As List(Of LAVector3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.#ctor
  commentId: M:Lucid.Animation.LATransformCollection.#ctor
  id: '#ctor'
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: LATransformCollection()
  nameWithType: LATransformCollection.LATransformCollection()
  fullName: Lucid.Animation.LATransformCollection.LATransformCollection()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 23224
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public LATransformCollection()
    content.vb: Public Sub New
  overload: Lucid.Animation.LATransformCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.#ctor(Lucid.Animation.LATransformCollection)
  commentId: M:Lucid.Animation.LATransformCollection.#ctor(Lucid.Animation.LATransformCollection)
  id: '#ctor(Lucid.Animation.LATransformCollection)'
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: LATransformCollection(LATransformCollection)
  nameWithType: LATransformCollection.LATransformCollection(LATransformCollection)
  fullName: Lucid.Animation.LATransformCollection.LATransformCollection(Lucid.Animation.LATransformCollection)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 23231
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public LATransformCollection(LATransformCollection copy)
    parameters:
    - id: copy
      type: Lucid.Animation.LATransformCollection
    content.vb: Public Sub New(copy As LATransformCollection)
  overload: Lucid.Animation.LATransformCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Lucid.Animation.LATransformCollection.AddToSequence(Sequence,System.Boolean)
  commentId: M:Lucid.Animation.LATransformCollection.AddToSequence(Sequence,System.Boolean)
  id: AddToSequence(Sequence,System.Boolean)
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: AddToSequence(Sequence, Boolean)
  nameWithType: LATransformCollection.AddToSequence(Sequence, Boolean)
  fullName: Lucid.Animation.LATransformCollection.AddToSequence(Sequence, System.Boolean)
  type: Method
  source:
    id: AddToSequence
    path: ''
    startLine: 23257
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public override Sequence AddToSequence(Sequence seq, bool ignoreTimescale = false)
    parameters:
    - id: seq
      type: Global.Sequence
    - id: ignoreTimescale
      type: System.Boolean
    return:
      type: Global.Sequence
    content.vb: Public Overrides Function AddToSequence(seq As Sequence, ignoreTimescale As Boolean = False) As Sequence
  overridden: Lucid.Animation.LAComponentCollection.AddToSequence(Sequence,System.Boolean)
  overload: Lucid.Animation.LATransformCollection.AddToSequence*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Lucid.Animation.LATransformCollection.GetSequenceDuration
  commentId: M:Lucid.Animation.LATransformCollection.GetSequenceDuration
  id: GetSequenceDuration
  parent: Lucid.Animation.LATransformCollection
  langs:
  - csharp
  - vb
  name: GetSequenceDuration()
  nameWithType: LATransformCollection.GetSequenceDuration()
  fullName: Lucid.Animation.LATransformCollection.GetSequenceDuration()
  type: Method
  source:
    id: GetSequenceDuration
    path: ''
    startLine: 23292
  assemblies:
  - cs.temp.dll
  namespace: Lucid.Animation
  syntax:
    content: public override float GetSequenceDuration()
    return:
      type: System.Single
    content.vb: Public Overrides Function GetSequenceDuration As Single
  overridden: Lucid.Animation.LAComponentCollection.GetSequenceDuration
  overload: Lucid.Animation.LATransformCollection.GetSequenceDuration*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Lucid.Animation
  commentId: N:Lucid.Animation
  name: Lucid.Animation
  nameWithType: Lucid.Animation
  fullName: Lucid.Animation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Lucid.Animation.LAComponentCollection
  commentId: T:Lucid.Animation.LAComponentCollection
  parent: Lucid.Animation
  name: LAComponentCollection
  nameWithType: LAComponentCollection
  fullName: Lucid.Animation.LAComponentCollection
- uid: Lucid.Animation.LAComponentCollection.onSequenceComplete
  commentId: F:Lucid.Animation.LAComponentCollection.onSequenceComplete
  parent: Lucid.Animation.LAComponentCollection
  name: onSequenceComplete
  nameWithType: LAComponentCollection.onSequenceComplete
  fullName: Lucid.Animation.LAComponentCollection.onSequenceComplete
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Global.Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: Global.List{Lucid.Animation.LAVector3}
  commentId: '!:Global.List{Lucid.Animation.LAVector3}'
  definition: Global.List`1
  name: List<LAVector3>
  nameWithType: List<LAVector3>
  fullName: List<Lucid.Animation.LAVector3>
  nameWithType.vb: List(Of LAVector3)
  fullName.vb: List(Of Lucid.Animation.LAVector3)
  name.vb: List(Of LAVector3)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Lucid.Animation.LAVector3
    name: LAVector3
    nameWithType: LAVector3
    fullName: Lucid.Animation.LAVector3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Lucid.Animation.LAVector3
    name: LAVector3
    nameWithType: LAVector3
    fullName: Lucid.Animation.LAVector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.List{Lucid.Animation.LAEulerAngles}
  commentId: '!:Global.List{Lucid.Animation.LAEulerAngles}'
  definition: Global.List`1
  name: List<LAEulerAngles>
  nameWithType: List<LAEulerAngles>
  fullName: List<Lucid.Animation.LAEulerAngles>
  nameWithType.vb: List(Of LAEulerAngles)
  fullName.vb: List(Of Lucid.Animation.LAEulerAngles)
  name.vb: List(Of LAEulerAngles)
  spec.csharp:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Lucid.Animation.LAEulerAngles
    name: LAEulerAngles
    nameWithType: LAEulerAngles
    fullName: Lucid.Animation.LAEulerAngles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Lucid.Animation.LAEulerAngles
    name: LAEulerAngles
    nameWithType: LAEulerAngles
    fullName: Lucid.Animation.LAEulerAngles
  - name: )
    nameWithType: )
    fullName: )
- uid: Lucid.Animation.LATransformCollection.#ctor*
  commentId: Overload:Lucid.Animation.LATransformCollection.#ctor
  name: LATransformCollection
  nameWithType: LATransformCollection.LATransformCollection
  fullName: Lucid.Animation.LATransformCollection.LATransformCollection
- uid: Lucid.Animation.LATransformCollection
  commentId: T:Lucid.Animation.LATransformCollection
  parent: Lucid.Animation
  name: LATransformCollection
  nameWithType: LATransformCollection
  fullName: Lucid.Animation.LATransformCollection
- uid: Lucid.Animation.LAComponentCollection.AddToSequence(Sequence,System.Boolean)
  commentId: M:Lucid.Animation.LAComponentCollection.AddToSequence(Sequence,System.Boolean)
  parent: Lucid.Animation.LAComponentCollection
  isExternal: true
  name: AddToSequence(Sequence, Boolean)
  nameWithType: LAComponentCollection.AddToSequence(Sequence, Boolean)
  fullName: Lucid.Animation.LAComponentCollection.AddToSequence(Sequence, System.Boolean)
  spec.csharp:
  - uid: Lucid.Animation.LAComponentCollection.AddToSequence(Sequence,System.Boolean)
    name: AddToSequence
    nameWithType: LAComponentCollection.AddToSequence
    fullName: Lucid.Animation.LAComponentCollection.AddToSequence
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.Sequence
    name: Sequence
    nameWithType: Sequence
    fullName: Sequence
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Lucid.Animation.LAComponentCollection.AddToSequence(Sequence,System.Boolean)
    name: AddToSequence
    nameWithType: LAComponentCollection.AddToSequence
    fullName: Lucid.Animation.LAComponentCollection.AddToSequence
  - name: (
    nameWithType: (
    fullName: (
  - uid: Global.Sequence
    name: Sequence
    nameWithType: Sequence
    fullName: Sequence
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Lucid.Animation.LATransformCollection.AddToSequence*
  commentId: Overload:Lucid.Animation.LATransformCollection.AddToSequence
  name: AddToSequence
  nameWithType: LATransformCollection.AddToSequence
  fullName: Lucid.Animation.LATransformCollection.AddToSequence
- uid: Global.Sequence
  isExternal: true
  name: Sequence
  nameWithType: Sequence
  fullName: Sequence
- uid: Lucid.Animation.LAComponentCollection.GetSequenceDuration
  commentId: M:Lucid.Animation.LAComponentCollection.GetSequenceDuration
  parent: Lucid.Animation.LAComponentCollection
  name: GetSequenceDuration()
  nameWithType: LAComponentCollection.GetSequenceDuration()
  fullName: Lucid.Animation.LAComponentCollection.GetSequenceDuration()
  spec.csharp:
  - uid: Lucid.Animation.LAComponentCollection.GetSequenceDuration
    name: GetSequenceDuration
    nameWithType: LAComponentCollection.GetSequenceDuration
    fullName: Lucid.Animation.LAComponentCollection.GetSequenceDuration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Lucid.Animation.LAComponentCollection.GetSequenceDuration
    name: GetSequenceDuration
    nameWithType: LAComponentCollection.GetSequenceDuration
    fullName: Lucid.Animation.LAComponentCollection.GetSequenceDuration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Lucid.Animation.LATransformCollection.GetSequenceDuration*
  commentId: Overload:Lucid.Animation.LATransformCollection.GetSequenceDuration
  name: GetSequenceDuration
  nameWithType: LATransformCollection.GetSequenceDuration
  fullName: Lucid.Animation.LATransformCollection.GetSequenceDuration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
